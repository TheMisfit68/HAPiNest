<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>top-level-items</key>
	<array>
		<dict>
			<key>children</key>
			<array>
				<dict>
					<key>children</key>
					<array>
						<dict>
							<key>destination</key>
							<dict>
								<key>rebasable-url</key>
								<dict>
									<key>base</key>
									<string>home-directory</string>
									<key>payload</key>
									<dict>
										<key>relative-path</key>
										<string>Documents/Development/Projects/Personal/Xcode/JVCocoa/Sources/JVCocoa/LoggingDebugging/JVLogger.swift</string>
									</dict>
								</dict>
								<key>type</key>
								<string>DVTDocumentLocation</string>
							</dict>
							<key>type</key>
							<string>bookmark</string>
						</dict>
						<dict>
							<key>destination</key>
							<dict>
								<key>location-parameters</key>
								<dict>
									<key>EndingColumnNumber</key>
									<string>0</string>
									<key>EndingLineNumber</key>
									<string>37</string>
									<key>StartingColumnNumber</key>
									<string>0</string>
									<key>StartingLineNumber</key>
									<string>36</string>
									<key>Timestamp</key>
									<string>714037500.621251</string>
								</dict>
								<key>rebasable-url</key>
								<dict>
									<key>base</key>
									<string>workspace</string>
									<key>payload</key>
									<dict>
										<key>relative-path</key>
										<string>HAP Extensions/Accessories/AccessoryDelegate.swift</string>
									</dict>
								</dict>
							</dict>
							<key>text-context</key>
							<dict>
								<key>focused</key>
								<string>        logger.info("‚ú¥Ô∏è\tValue '\(characteristic.description ?? "")' of '\(ofAccessory.info.name.value ?? "")' changed to \(String(describing:didChangeValue) )")
</string>
								<key>leading</key>
								<string>        let logger = Logger(subsystem: "be.oneclick.HAPiNest", category: "AccessoryDelegate")
        
</string>
								<key>trailing</key>
								<string>		characteristicChanged.set()
		
		handleCharacteristicChange(accessory:ofAccessory, service: ofService, characteristic: characteristic, to: didChangeValue)
</string>
							</dict>
							<key>type</key>
							<string>bookmark</string>
						</dict>
						<dict>
							<key>destination</key>
							<dict>
								<key>location-parameters</key>
								<dict>
									<key>EndingColumnNumber</key>
									<string>0</string>
									<key>EndingLineNumber</key>
									<string>227</string>
									<key>StartingColumnNumber</key>
									<string>0</string>
									<key>StartingLineNumber</key>
									<string>226</string>
									<key>Timestamp</key>
									<string>714047355.084039</string>
								</dict>
								<key>rebasable-url</key>
								<dict>
									<key>base</key>
									<string>home-directory</string>
									<key>payload</key>
									<dict>
										<key>relative-path</key>
										<string>Documents/Development/Projects/Personal/Xcode/HomeAutomation/Drivers/TizenDriver/Sources/TizenDriver/TizenDriver.swift</string>
									</dict>
								</dict>
							</dict>
							<key>text-context</key>
							<dict>
								<key>focused</key>
								<string>        print("üêû\t\(deviceName)") // TODO: - remove after testing
</string>
								<key>leading</key>
								<string>        
        let base64DeviceName = Data(deviceName.utf8).base64EncodedString()
</string>
								<key>trailing</key>
								<string>        let connectionString = "wss://\(ipAddress):\(port)/api/v2/channels/samsung.remote.control?name=\(base64DeviceName)&amp;token=\(deviceToken ?? 0)"
        print("üêû\t\(connectionString)") // TODO: - remove after testing
        let logger = Logger(subsystem: "be.oneclick.TizenDriver", category: "TizenDriver")
</string>
							</dict>
							<key>title</key>
							<string>replace regular print statements everywhere</string>
							<key>type</key>
							<string>bookmark</string>
						</dict>
						<dict>
							<key>destination</key>
							<dict>
								<key>location-parameters</key>
								<dict>
									<key>EndingColumnNumber</key>
									<string>27</string>
									<key>EndingLineNumber</key>
									<string>282</string>
									<key>StartingColumnNumber</key>
									<string>12</string>
									<key>StartingLineNumber</key>
									<string>282</string>
									<key>Timestamp</key>
									<string>713892638.73798</string>
								</dict>
								<key>rebasable-url</key>
								<dict>
									<key>base</key>
									<string>home-directory</string>
									<key>payload</key>
									<dict>
										<key>relative-path</key>
										<string>Documents/Development/Projects/Personal/Xcode/HomeAutomation/Drivers/LeafDriver/Sources/LeafDriver/ACController.swift</string>
									</dict>
								</dict>
							</dict>
							<key>text-context</key>
							<dict>
								<key>focused</key>
								<string>Debugger.shared</string>
								<key>leading</key>
								<string>		//                        if let airCoUpdate = value{
		//                            if airCoUpdate.responseFlag == "1"{
		//								</string>
								<key>trailing</key>
								<string>.log(debugLevel:.Native(logType: .info), "airCoUpdate \(String(describing: value))")
		//
		//                                //TODO: - set aircoUpdate=&gt;aircostatus?
</string>
							</dict>
							<key>title</key>
							<string>Find Result: 		//								Debugger.shared.log(debugLevel:.Native(logType: .info), "airCoUpdate \(String(describing: value))")</string>
							<key>type</key>
							<string>bookmark</string>
						</dict>
					</array>
					<key>title</key>
					<string>Change debugger to logging</string>
					<key>type</key>
					<string>group</string>
				</dict>
				<dict>
					<key>destination</key>
					<dict>
						<key>location-parameters</key>
						<dict>
							<key>EndingColumnNumber</key>
							<string>0</string>
							<key>EndingLineNumber</key>
							<string>59</string>
							<key>StartingColumnNumber</key>
							<string>0</string>
							<key>StartingLineNumber</key>
							<string>58</string>
							<key>Timestamp</key>
							<string>713817050.2516249</string>
						</dict>
						<key>rebasable-url</key>
						<dict>
							<key>base</key>
							<string>workspace</string>
							<key>payload</key>
							<dict>
								<key>relative-path</key>
								<string>HAPiNest/HomekitServer/HomeKitServerView.swift</string>
							</dict>
						</dict>
					</dict>
					<key>text-context</key>
					<dict>
						<key>focused</key>
						<string>                qrCode.aspectRatio(contentMode: .fill).frame(width: 64)
</string>
						<key>leading</key>
						<string>        var body: some View {
            return VStack {
</string>
						<key>trailing</key>
						<string>                Text("Scan the code above using your iPhone to pair it with the")
                Text(HomeKitServer.shared.mainBridge.name).bold().font(.system(size: 18))
				Text("(or enter setupcode \(HomeKitServer.shared.mainBridge.setupCode))")
</string>
					</dict>
					<key>title</key>
					<string>get QRcode to rescale</string>
					<key>type</key>
					<string>bookmark</string>
				</dict>
				<dict>
					<key>children</key>
					<array>
						<dict>
							<key>destination</key>
							<dict>
								<key>location-parameters</key>
								<dict>
									<key>EndingColumnNumber</key>
									<string>0</string>
									<key>EndingLineNumber</key>
									<string>30</string>
									<key>StartingColumnNumber</key>
									<string>0</string>
									<key>StartingLineNumber</key>
									<string>10</string>
									<key>Timestamp</key>
									<string>713811424.253135</string>
								</dict>
								<key>rebasable-url</key>
								<dict>
									<key>base</key>
									<string>home-directory</string>
									<key>payload</key>
									<dict>
										<key>relative-path</key>
										<string>Documents/Development/Projects/Personal/Xcode/JVCocoa/Sources/JVCocoa/Networking/RestAPI/DeprecatedCode/JVDecodingPublisher.swift</string>
									</dict>
								</dict>
							</dict>
							<key>text-context</key>
							<dict>
								<key>focused</key>
								<string>// MARK: - Decode JSON using combine
class DecodingPublisher{
	
	// Publisher to decode received Json-String to a model object (that conforms to decodable)
	class func Publisher&lt;T: Decodable&gt;(from request:URLRequest, using decoder:JSONDecoder = newJSONDecoder(), retryDelay:Int = 2, maxRetries:Int = 1) -&gt; AnyPublisher&lt;T, Swift.Error&gt; {
		
		let decodingPublisher =  URLSession.shared.dataTaskPublisher(for: request).share()
		
		return decodingPublisher
			.catch { _ in
				return decodingPublisher.delay(for: .seconds(retryDelay), scheduler: DispatchQueue.main)
			} // Only in case of an error attach a delay to the publisher
			.retry(maxRetries)
			.tryMap{ data, response in print(response); return data}
			.decode(type: T.self, decoder: decoder)
			.subscribe(on: DispatchQueue.global())
			.eraseToAnyPublisher() // Make the publisher more generic, for use downstream
	}
	
}
</string>
								<key>leading</key>
								<string>import Combine

</string>
								<key>trailing</key>
								<string>
</string>
							</dict>
							<key>type</key>
							<string>bookmark</string>
						</dict>
						<dict>
							<key>destination</key>
							<dict>
								<key>location-parameters</key>
								<dict>
									<key>EndingColumnNumber</key>
									<string>0</string>
									<key>EndingLineNumber</key>
									<string>12</string>
									<key>StartingColumnNumber</key>
									<string>0</string>
									<key>StartingLineNumber</key>
									<string>11</string>
									<key>Timestamp</key>
									<string>713893670.5638601</string>
								</dict>
								<key>rebasable-url</key>
								<dict>
									<key>base</key>
									<string>home-directory</string>
									<key>payload</key>
									<dict>
										<key>relative-path</key>
										<string>Documents/Development/Projects/Personal/Xcode/JVCocoa/Sources/JVCocoa/Networking/RestAPI/DeprecatedCode/JVRestAPIDeprecated.swift</string>
									</dict>
								</dict>
							</dict>
							<key>text-context</key>
							<dict>
								<key>focused</key>
								<string>@available(OSX 10.15, *)
</string>
								<key>leading</key>
								<string>import OSLog

</string>
								<key>trailing</key>
								<string>extension RestAPI{
    
    public func publish&lt;T:Decodable&gt;(method:RestAPI.Method = .GET,command:E, parameters:[P:String], maxRetries:Int = 2, retryDelay:Int = 2)-&gt;AnyPublisher&lt;T?, Swift.Error&gt;{
</string>
							</dict>
							<key>type</key>
							<string>bookmark</string>
						</dict>
					</array>
					<key>title</key>
					<string>Deprecated</string>
					<key>type</key>
					<string>group</string>
				</dict>
			</array>
			<key>title</key>
			<string>WIP</string>
			<key>type</key>
			<string>group</string>
		</dict>
		<dict>
			<key>children</key>
			<array>
				<dict>
					<key>destination</key>
					<dict>
						<key>location-parameters</key>
						<dict>
							<key>EndingColumnNumber</key>
							<string>0</string>
							<key>EndingLineNumber</key>
							<string>14</string>
							<key>StartingColumnNumber</key>
							<string>0</string>
							<key>StartingLineNumber</key>
							<string>13</string>
							<key>Timestamp</key>
							<string>713776123.968336</string>
						</dict>
						<key>rebasable-url</key>
						<dict>
							<key>base</key>
							<string>workspace</string>
							<key>payload</key>
							<dict>
								<key>relative-path</key>
								<string>HAPiNest/MainWindow/DashboardView.swift</string>
							</dict>
						</dict>
					</dict>
					<key>text-context</key>
					<dict>
						<key>focused</key>
						<string>	// TODO: - Implement Inverter Display again
</string>
						<key>leading</key>
						<string>	let serverView:HomeKitServerView
	let plcView:SoftPLCView
</string>
						<key>trailing</key>
						<string>	// let inverterView:

	var body: some View {
</string>
					</dict>
					<key>type</key>
					<string>bookmark</string>
				</dict>
				<dict>
					<key>destination</key>
					<dict>
						<key>location-parameters</key>
						<dict>
							<key>EndingColumnNumber</key>
							<string>7</string>
							<key>EndingLineNumber</key>
							<string>0</string>
							<key>StartingColumnNumber</key>
							<string>3</string>
							<key>StartingLineNumber</key>
							<string>0</string>
							<key>Timestamp</key>
							<string>713785386.705055</string>
						</dict>
						<key>rebasable-url</key>
						<dict>
							<key>base</key>
							<string>workspace</string>
							<key>payload</key>
							<dict>
								<key>relative-path</key>
								<string>ToDo domotica shortterm.md</string>
							</dict>
						</dict>
					</dict>
					<key>text-context</key>
					<dict>
						<key>focused</key>
						<string>ToDo</string>
						<key>leading</key>
						<string>#  </string>
						<key>trailing</key>
						<string> Domotica shortterm

Replace logging statements with the standard Xcode logging
</string>
					</dict>
					<key>title</key>
					<string>Find Result: #  ToDo Domotica shortterm</string>
					<key>type</key>
					<string>bookmark</string>
				</dict>
				<dict>
					<key>destination</key>
					<dict>
						<key>location-parameters</key>
						<dict>
							<key>EndingColumnNumber</key>
							<string>6</string>
							<key>EndingLineNumber</key>
							<string>0</string>
							<key>StartingColumnNumber</key>
							<string>2</string>
							<key>StartingLineNumber</key>
							<string>0</string>
							<key>Timestamp</key>
							<string>713785326.086123</string>
						</dict>
						<key>rebasable-url</key>
						<dict>
							<key>base</key>
							<string>workspace</string>
							<key>payload</key>
							<dict>
								<key>relative-path</key>
								<string>ToDo.md</string>
							</dict>
						</dict>
					</dict>
					<key>text-context</key>
					<dict>
						<key>focused</key>
						<string>ToDo</string>
						<key>leading</key>
						<string># </string>
						<key>trailing</key>
						<string> for HAPiNest
## A personal Home Automation System

</string>
					</dict>
					<key>title</key>
					<string>Find Result: # ToDo for HAPiNest</string>
					<key>type</key>
					<string>bookmark</string>
				</dict>
				<dict>
					<key>destination</key>
					<dict>
						<key>location-parameters</key>
						<dict>
							<key>EndingColumnNumber</key>
							<string>0</string>
							<key>EndingLineNumber</key>
							<string>15</string>
							<key>StartingColumnNumber</key>
							<string>0</string>
							<key>StartingLineNumber</key>
							<string>14</string>
							<key>Timestamp</key>
							<string>714082819.238833</string>
						</dict>
						<key>rebasable-url</key>
						<dict>
							<key>base</key>
							<string>home-directory</string>
							<key>payload</key>
							<dict>
								<key>relative-path</key>
								<string>Documents/Development/Projects/Personal/Xcode/JVCocoa/Sources/JVCocoa/LoggingDebugging/JVLogger.swift</string>
							</dict>
						</dict>
					</dict>
					<key>text-context</key>
					<dict>
						<key>focused</key>
						<string>    // TODO: Replace the first macro with the second one whenever it is possible to replace the empty string
</string>
						<key>leading</key>
						<string>    
    // MARK: - LogThisMethod
</string>
						<key>trailing</key>
						<string>    // with a default argument of self, a.k.a. the caller-side-object that you want to log
    
    public func logThisMethod&lt;T:Any&gt;(
</string>
					</dict>
					<key>type</key>
					<string>bookmark</string>
				</dict>
			</array>
			<key>title</key>
			<string>ToDo</string>
			<key>type</key>
			<string>group</string>
		</dict>
		<dict>
			<key>children</key>
			<array>
				<dict>
					<key>destination</key>
					<dict>
						<key>location-parameters</key>
						<dict>
							<key>EndingColumnNumber</key>
							<string>68</string>
							<key>EndingLineNumber</key>
							<string>142</string>
							<key>StartingColumnNumber</key>
							<string>4</string>
							<key>StartingLineNumber</key>
							<string>139</string>
							<key>Timestamp</key>
							<string>713788865.135098</string>
						</dict>
						<key>rebasable-url</key>
						<dict>
							<key>base</key>
							<string>home-directory</string>
							<key>payload</key>
							<dict>
								<key>relative-path</key>
								<string>Documents/Development/Projects/Personal/Xcode/HomeAutomation/SoftPLC/Sources/SoftPLC/SoftPLCView.swift</string>
							</dict>
						</dict>
					</dict>
					<key>text-context</key>
					<dict>
						<key>focused</key>
						<string>// FIXME: - Add keyboardtype modifier to this textfield
				// when it bcomes available for MacOS or
				// check if binding $fieldContent updates while typing
				// currently it does not when used with a formatter due to a bug</string>
						<key>leading</key>
						<string>				Text("Adjust the maximum cycle time of the PLC")
				
				</string>
						<key>trailing</key>
						<string>
				TextField("", value: $fieldContent,
						  formatter: NumberFormatter()
</string>
					</dict>
					<key>type</key>
					<string>bookmark</string>
				</dict>
				<dict>
					<key>destination</key>
					<dict>
						<key>location-parameters</key>
						<dict>
							<key>EndingColumnNumber</key>
							<string>5</string>
							<key>EndingLineNumber</key>
							<string>33</string>
							<key>StartingColumnNumber</key>
							<string>5</string>
							<key>StartingLineNumber</key>
							<string>26</string>
							<key>Timestamp</key>
							<string>713788895.226409</string>
						</dict>
						<key>rebasable-url</key>
						<dict>
							<key>base</key>
							<string>home-directory</string>
							<key>payload</key>
							<dict>
								<key>relative-path</key>
								<string>Documents/Development/Projects/Personal/Xcode/JVCocoa/Sources/JVCocoa/SwiftUI/ToggleStyles/JVTwoViewsToggleStyle.swift</string>
							</dict>
						</dict>
					</dict>
					<key>text-context</key>
					<dict>
						<key>focused</key>
						<string>/FIXME: - AnyView can not except Views created on the callers side
    
    public init(viewOn:AnyView, colorOn:Color? = nil, viewOff:AnyView, colorOff:Color? = nil){
        self.viewOn = viewOn
        self.colorOn = colorOn
        self.viewOff = viewOff
        self.colorOff = colorOff
    }</string>
						<key>leading</key>
						<string>    }
    
    /</string>
						<key>trailing</key>
						<string>
    
}
</string>
					</dict>
					<key>type</key>
					<string>bookmark</string>
				</dict>
				<dict>
					<key>destination</key>
					<dict>
						<key>location-parameters</key>
						<dict>
							<key>EndingColumnNumber</key>
							<string>0</string>
							<key>EndingLineNumber</key>
							<string>9</string>
							<key>StartingColumnNumber</key>
							<string>0</string>
							<key>StartingLineNumber</key>
							<string>8</string>
							<key>Timestamp</key>
							<string>713788909.5674421</string>
						</dict>
						<key>rebasable-url</key>
						<dict>
							<key>base</key>
							<string>home-directory</string>
							<key>payload</key>
							<dict>
								<key>relative-path</key>
								<string>Documents/Development/Projects/Personal/Xcode/JVCocoa/Sources/JVCocoa/JVXMLParser.swift</string>
							</dict>
						</dict>
					</dict>
					<key>text-context</key>
					<dict>
						<key>focused</key>
						<string>//FIXME: - Uncomment and build
</string>
						<key>leading</key>
						<string>//

</string>
						<key>trailing</key>
						<string>

//import Foundation
</string>
					</dict>
					<key>type</key>
					<string>bookmark</string>
				</dict>
			</array>
			<key>title</key>
			<string>FixMe</string>
			<key>type</key>
			<string>group</string>
		</dict>
		<dict>
			<key>children</key>
			<array/>
			<key>title</key>
			<string>Warning</string>
			<key>type</key>
			<string>group</string>
		</dict>
		<dict>
			<key>children</key>
			<array/>
			<key>title</key>
			<string>Remark</string>
			<key>type</key>
			<string>group</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>49</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>48</string>
					<key>Timestamp</key>
					<string>714050396.814049</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>HAPiNest/HomekitServer/HomeKitServer.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>//      let _ = SMAInverter.CreateInverters()
</string>
				<key>leading</key>
				<string>        logger.info("Initializing the server \(self.name, privacy: .public)...")

</string>
				<key>trailing</key>
				<string>        
    }
    
</string>
			</dict>
			<key>title</key>
			<string>ToDo</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
	</array>
</dict>
</plist>
